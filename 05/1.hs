-- p.49 - p.50

{-
  リスト内包表記
  数学では { x^2 | x ∈ {1..5} } 都表記することで集合から新しい集合を生成できる
  Haskell でも既存のリストから新しいリストを生成するためにリスト内包表記が使える

  > [x^2 | x <- [1..5]]
  [1,4,9,16,25]

  x <- [1..5] の様な式を `生成器` と呼ぶ
  １つのリスト内包表記の中に複数の生成器を指定できる

  > [(x, y) | x <- [1,2,3], y <- [4,5]]
  [(1,4), (1,5), (2,4), (2,5), (3,4), (3,5)]

  生成器の順番を入れ替えるとリストの順番も変わる
  > [(x, y) | y <- [4,5], x <- [1,2,3]]
  [(1,4), (2,4), (3,4), (1,5), (2,5), (3,5)]

  後方の生成器は前方の生成器が使う変数を使用できる
  > [(x, y) | x <- [1,2,3], y <- [x..3]]
  [(1,1), (1,2), (1,3), (2,2), (2,3), (3,3)]
-}

concat :: [[a]] -> [a]
concat xss = [x | xs <- xss, x <- xs]

firsts :: [(a, b)] -> [a]
firsts ps = [a | (a, _) <- ps]

length :: [a] -> Int
length xs = sum [1 | _ <- xs]